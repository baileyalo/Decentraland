{
  "contractName": "FullAssetRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "assetId",
          "type": "uint256"
        },
        {
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetHolder",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "getApprovedAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "userData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"assetId\",\"type\":\"uint256\"},{\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetHolder\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getApprovedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userData\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Authorize a third party operator to manage one particular asset\",\"params\":{\"assetId\":\"asset to approve\",\"operator\":\"address to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"exists(uint256)\":{\"details\":\"Method to check if an asset identified by the given id exists under this DAR.\",\"return\":\"uint256 the assetId\"},\"getApproved(uint256)\":{\"details\":\"Query what address has been particularly authorized to move an asset\",\"params\":{\"assetId\":\"the asset to be queried for\"},\"return\":\"bool true if the asset has been approved by the holder\"},\"isApprovedForAll(address,address)\":{\"details\":\"Query whether an address has been authorized to move any assets on behalf of someone else\",\"params\":{\"assetHolder\":\"the address that provided the authorization\",\"operator\":\"the address that might be authorized\"},\"return\":\"bool true if the operator has been authorized to move any assets\"},\"isAuthorized(address,uint256)\":{\"details\":\"Query if an operator can move an asset.\",\"params\":{\"assetId\":\"the asset that has been `approved` for transfer\",\"operator\":\"the address that might be authorized\"},\"return\":\"bool true if the asset has been approved by the holder\"},\"ownerOf(uint256)\":{\"details\":\"Queries what address owns an asset. This method does not throw. In order to check if the asset exists, use the `exists` function or check if the return value of this call is `0`.\",\"return\":\"uint256 the assetId\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Alias of `safeTransferFrom(from, to, assetId, '')`\",\"params\":{\"assetId\":\"uint256 ID of the asset to be transferred\",\"from\":\"address that currently owns an asset\",\"to\":\"address to receive the ownership of the asset\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Securely transfers the ownership of a given asset from one address to another address, calling the method `onNFTReceived` on the target address if there's code associated with it\",\"params\":{\"assetId\":\"uint256 ID of the asset to be transferred\",\"from\":\"address that currently owns an asset\",\"to\":\"address to receive the ownership of the asset\",\"userData\":\"bytes arbitrary user information to attach to this transfer\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Authorize a third party operator to manage (send) msg.sender's asset\",\"params\":{\"authorized\":\"bool set to true to authorize, false to withdraw authorization\",\"operator\":\"address to be approved\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns `true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `index` >= `balanceOf(owner)` or if `owner` is the zero address, representing invalid assets. Otherwise this must not throw.\",\"params\":{\"index\":\"A counter less than `balanceOf(owner)`\",\"owner\":\"An address where we are interested in assets owned by them\"},\"return\":\"The identifier for the `index`th asset assigned to `owner`,  (sort order not specified)\"},\"tokensOf(address)\":{\"details\":\"This is not intended to be used on-chain\",\"params\":{\"owner\":\"address of the owner to query\"},\"return\":\"a list of all assetIds of a user\"},\"totalSupply()\":{\"details\":\"Gets the total amount of assets stored by the contract\",\"return\":\"uint256 representing the total amount of assets\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given asset from one address to another address Warning! This function does not attempt to verify that the target address can send tokens.\",\"params\":{\"assetId\":\"uint256 ID of the asset to be transferred\",\"from\":\"address sending the asset\",\"to\":\"address to receive the ownership of the asset\"}}}},\"userdoc\":{\"methods\":{\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate tokens assigned to an owner\"},\"tokensOf(address)\":{\"notice\":\"Get all tokens of a given address\"}}}},\"settings\":{\"compilationTarget\":{\"erc821/contracts/FullAssetRegistry.sol\":\"FullAssetRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc821/contracts/AssetRegistryStorage.sol\":{\"keccak256\":\"0xbf8b47bfc7fa01262e2b6cc95bfdff4cc2374a6012feccda9c4b9ede2a4cfcbc\",\"urls\":[\"bzzr://a864731b246010c75056fa8f0be9b386cf9d18b7429757b68dab5d17f045a3bb\"]},\"erc821/contracts/ERC165.sol\":{\"keccak256\":\"0x06fdfbfda4eee06b45de9d9628e2befb5de9bf50eb77271b0830dfa89c0ce687\",\"urls\":[\"bzzr://fd47097df9d36d70dc46ae0cf98dcc5fd8b4148e614bc35b151fa0b6dabccc93\"]},\"erc821/contracts/ERC721Base.sol\":{\"keccak256\":\"0xdd4a3d67068db0c94499095ca6d36d9f3b16cb58f5b175d1b69d8819acdb8ac5\",\"urls\":[\"bzzr://a6f685e90ecc73b1ab6a329549a3d32751dfd50fea4663c3d3815b30115973db\"]},\"erc821/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0x500061dee8a7ebc9c1bbb62ecafc36e41d818891e80515d15b7f1bc18b27fe2b\",\"urls\":[\"bzzr://95cf006e0110af2adace47b3ee3d3edf8fecfa42c243e6fdb35abf4a3eaa9722\"]},\"erc821/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0x13ad6b8d4fff945dfd5f0ec40d0ca6aa7af3f141defa2414f766dd3045a1e88f\",\"urls\":[\"bzzr://d044eb411b5e6e196678a10bd557a33761077366c979933e01b48a7a9a64bdbe\"]},\"erc821/contracts/FullAssetRegistry.sol\":{\"keccak256\":\"0xc8486b1365ab798ef60b5b1c11cb87514d48b02ea64adfd39213844f1e7fc635\",\"urls\":[\"bzzr://6482a1b81fd9a740bedfb7c539d414d16485686e9d8ff1395453d465bb3a2f10\"]},\"erc821/contracts/IERC721Base.sol\":{\"keccak256\":\"0xd932cc1868fb1c24ac4c79d1debcd7ff5119ecaa23442458d9f87ea117219504\",\"urls\":[\"bzzr://f7e760e1705b9bb8de67bbad8cf82780fabbac3e9481cf1f50c519f72398a4ad\"]},\"erc821/contracts/IERC721Enumerable.sol\":{\"keccak256\":\"0x776520d1463e602d14efc9a7f5bb5067cdbc5b63ffc697eeadcedccb50e34249\",\"urls\":[\"bzzr://b81d07bf7b4ab8f7da00b252aff9c17155a009f9c9a821de9eb77d4a2b9ff491\"]},\"erc821/contracts/IERC721Metadata.sol\":{\"keccak256\":\"0x95830471dee12e419b4e16054782cb26a076b7ca2b50977649420c03ca214bcc\",\"urls\":[\"bzzr://25603b0b3ff1c3b5db3f96b64febde6d867ac20d3609dcfa0e9eb29d94c7788c\"]},\"erc821/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x856bd70175ebb0490705ba82079fcb95338f914f7de964d6383c043b43d1daea\",\"urls\":[\"bzzr://b8ef1270bcfd16e404127921124b64ec89255d67521817f49d1bcfc8505fc65c\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xf053bc62384ddd21b4f74a98029ebb70817a64a920052529e8456f75a574acb2\",\"urls\":[\"bzzr://e6e26f56d60fd6b011c765d42131cc60d027bc79a753055c232702c78c1746d8\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "118:522:5:-;;;197:26;8:9:-1;5:2;;;30:1;27;20:12;5:2;197:26:5;118:522;;;;;;",
  "deployedSourceMap": "118:522:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11182:274:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11182:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:70:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;165:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:116:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3471:116:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5479:359;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5479:359:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1467:87:2;;;;;;;;;;;;;;;;;;;;;;;9810:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9810:137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4090:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4090:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:239:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:239:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:71:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:71:5;;;;;;;;;;;;;;;;;;;;;;;8655:140:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8655:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:96:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:96:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:101:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;376:101:3;;;;;;;;;;;;;;;;;1932::2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1932:101:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:108:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;402:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:101:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2377:101:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:84:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:84:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;315:84:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;238:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4790:129:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4790:129:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9273:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9273:162:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2947:158:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3590:123:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11182:274;11253:4;11286:10;11270:26;;:12;:26;;;;11266:59;;;11313:5;11306:12;;;;11266:59;499:10;11353:18;;11337:34;;;:12;:34;;;;:76;;;;648:10;11391:22;;11375:38;;;:12;:38;;;;11337:76;:114;;;;707:10;11433:18;;11417:34;;;:12;:34;;;;11337:114;11330:121;;11182:274;;;;:::o;165:70:4:-;204:6;225:5;218:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;165:70;:::o;3471:116:2:-;3532:7;3554:28;3574:7;3554:19;:28::i;:::-;3547:35;;3471:116;;;:::o;5479:359::-;5546:14;5563:17;5572:7;5563:8;:17::i;:::-;5546:34;;5608:6;5594:20;;:10;:20;;;:61;;;;5618:37;5636:10;5648:6;5618:17;:37::i;:::-;5594:61;5586:70;;;;;;;;5682:6;5670:18;;:8;:18;;;;5662:27;;;;;;;;5732:8;5700:40;;:28;5720:7;5700:19;:28::i;:::-;:40;;;;5696:138;;;5771:8;5750:9;:18;5760:7;5750:18;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5819:7;5809:8;5792:35;;5801:6;5792:35;;;;;;;;;;;;5696:138;5479:359;;;:::o;1467:87::-;1513:7;1535:14;:12;:14::i;:::-;1528:21;;1467:87;:::o;9810:137::-;9897:45;9913:4;9919:2;9923:7;9897:45;;;;;;;;;;;;;9936:5;9897:15;:45::i;:::-;9810:137;;;:::o;4090:136::-;4170:4;4189:32;4203:8;4213:7;4189:13;:32::i;:::-;4182:39;;4090:136;;;;:::o;942:239:3:-;1044:15;1085:9;:16;1095:5;1085:16;;;;;;;;;;;;;;;:23;;;;1077:5;:31;1069:40;;;;;;;;1132:6;1123:5;:16;1115:25;;;;;;;;1153:9;:16;1163:5;1153:16;;;;;;;;;;;;;;;1170:5;1153:23;;;;;;;;;;;;;;;;;;1146:30;;942:239;;;;:::o;567:71:5:-;610:7;632:1;625:8;;567:71;:::o;8655:140:2:-;8746:44;8762:4;8768:2;8772:7;8746:44;;;;;;;;;;;;;8785:4;8746:15;:44::i;:::-;8655:140;;;:::o;360:96:5:-;416:4;435:16;443:7;435;:16::i;:::-;428:23;;360:96;;;:::o;376:101:3:-;432:9;456;:16;466:5;456:16;;;;;;;;;;;;;;;449:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:101;;;:::o;1932::2:-;1989:7;2011:17;2020:7;2011:8;:17::i;:::-;2004:24;;1932:101;;;:::o;402:108:4:-;465:6;486:10;:19;497:7;486:19;;;;;;;;;;;479:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:108;;;:::o;2377:101:2:-;2434:7;2456:17;2467:5;2456:10;:17::i;:::-;2449:24;;2377:101;;;:::o;315:84:4:-;361:6;382:12;375:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:84;:::o;238:74::-;279:6;300:7;293:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:74;:::o;4790:129:2:-;4874:40;4893:8;4903:10;4874:18;:40::i;:::-;4790:129;;:::o;9273:162::-;9380:50;9396:4;9402:2;9406:7;9415:8;;9380:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9425:4;9380:15;:50::i;:::-;9273:162;;;;;:::o;2947:158::-;3039:4;3060:40;3078:11;3091:8;3060:17;:40::i;:::-;3053:47;;2947:158;;;;:::o;3590:123::-;3658:7;3680:28;3700:7;3680:19;:28::i;:::-;3673:35;;3590:123;;;:::o;3716:114::-;3785:7;3807:9;:18;3817:7;3807:18;;;;;;;;;;;;;;;;;;;;;3800:25;;3716:114;;;:::o;2036:103::-;2094:7;2116:9;:18;2126:7;2116:18;;;;;;;;;;;;;;;;;;;;;2109:25;;2036:103;;;:::o;3108:152::-;3201:4;3222:10;:23;3233:11;3222:23;;;;;;;;;;;;;;;:33;3246:8;3222:33;;;;;;;;;;;;;;;;;;;;;;;;;3215:40;;3108:152;;;;:::o;1557:80::-;1604:7;1626:6;;1619:13;;1557:80;:::o;9951:224::-;10092:7;8025:34;8039:10;8051:7;8025:13;:34::i;:::-;8017:43;;;;;;;;10122:48;10133:4;10139:2;10143:7;10152:8;10162:7;10122:10;:48::i;:::-;9951:224;;;;;;:::o;4229:306::-;4310:4;4352:13;4344:1;4332:8;:13;;;;4324:22;;;;;;;;4368:17;4377:7;4368:8;:17::i;:::-;4352:33;;4407:5;4395:17;;:8;:17;;;4391:49;;;4429:4;4422:11;;;;4391:49;4452:34;4470:5;4477:8;4452:17;:34::i;:::-;:78;;;;4522:8;4490:40;;:28;4510:7;4490:19;:28::i;:::-;:40;;;4452:78;4445:85;;4229:306;;;;;;:::o;459:104:5:-;516:4;557:1;535:9;:18;545:7;535:18;;;;;;;;;;;;;;;;;;;;;:23;;;;528:30;;459:104;;;:::o;2481:108:2:-;2539:7;2561:9;:16;2571:5;2561:16;;;;;;;;;;;;;;;:23;;;;2554:30;;2481:108;;;:::o;4922:386::-;5004:10;5000:245;;;5033:39;5051:10;5063:8;5033:17;:39::i;:::-;5032:40;5024:49;;;;;;;;5081:39;5099:8;5109:10;5081:17;:39::i;:::-;5000:245;;;5149:39;5167:10;5179:8;5149:17;:39::i;:::-;5141:48;;;;;;;;5197:41;5217:8;5227:10;5197:19;:41::i;:::-;5000:245;5282:8;5255:48;;5270:10;5255:48;;;5292:10;5255:48;;;;;;;;;;;;;;;;;;;;;;4922:386;;:::o;10179:707::-;10419:14;10321:2;8267:1;8252:11;:16;;;;8244:25;;;;;;;;10352:7;10361:2;8381;8360:23;;:17;8369:7;8360:8;:17::i;:::-;:23;;;;8352:32;;;;;;;;10384:4;10390:7;8166:4;8145:25;;:17;8154:7;8145:8;:17::i;:::-;:25;;;8137:34;;;;;;;;10436:9;:18;10446:7;10436:18;;;;;;;;;;;;;;;;;;;;;10419:35;;10460:31;10475:6;10483:7;10460:14;:31::i;:::-;10497:33;10514:6;10522:7;10497:16;:33::i;:::-;10536:24;10548:2;10552:7;10536:11;:24::i;:::-;10592:7;10588:2;10571:29;;10580:6;10571:29;;;;;;;;;;;;10611:7;:26;;;;;10622:15;10634:2;10622:11;:15::i;:::-;10611:26;10607:275;;;439:10;10852:15;;10753:114;;;10769:2;10753:36;;;10801:10;10813:6;10821:7;10830:8;10753:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10753:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10753:95:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10753:95:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10753:95:2;;;;;;;;;;;;;;;;:114;;;;10736:139;;;;;;;;10607:275;8390:1;;8275;;10179:707;;;;;;;:::o;5842:115::-;5948:4;5917:10;:18;5928:6;5917:18;;;;;;;;;;;;;;;:28;5936:8;5917:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;5842:115;;:::o;5961:118::-;6069:5;6038:10;:18;6049:6;6038:18;;;;;;;;;;;;;;;:28;6057:8;6038:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;5961:118;;:::o;7166:214::-;7263:6;7242:27;;:17;7251:7;7242:8;:17::i;:::-;:27;;;:54;;;;;7295:1;7273:9;:18;7283:7;7273:18;;;;;;;;;;;;;;;;;;;;;:23;;;;7242:54;7238:138;;;7327:1;7306:9;:18;7316:7;7306:18;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;7361:7;7358:1;7350:6;7341:28;;;;;;;;;;;;7238:138;7166:214;;:::o;6355:807::-;6427:18;6476:22;6530:19;6448:13;:22;6462:7;6448:22;;;;;;;;;;;;6427:43;;6501:23;6522:1;6501:16;6512:4;6501:10;:16::i;:::-;:20;;:23;;;;:::i;:::-;6476:48;;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;6568:14;6552:31;;;;;;;;;;;;;;;;;;6530:53;;6611:1;6590:9;:18;6600:7;6590:18;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;6743:11;6713:9;:15;6723:4;6713:15;;;;;;;;;;;;;;;6729:10;6713:27;;;;;;;;;;;;;;;;;:41;;;;6819:1;6785:9;:15;6795:4;6785:15;;;;;;;;;;;;;;;6801:14;6785:31;;;;;;;;;;;;;;;;;:35;;;;6826:9;:15;6836:4;6826:15;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;6960:1;6934:9;:15;6944:4;6934:15;;;;;;;;;;;;;;;:22;;;;:27;6930:70;;;6978:9;:15;6988:4;6978:15;;;;;;;;;;;;;;;;6971:22;;;;:::i;:::-;6930:70;7082:1;7057:13;:22;7071:7;7057:22;;;;;;;;;;;:26;;;;7118:10;7089:13;:26;7103:11;7089:26;;;;;;;;;;;:39;;;;7144:13;7155:1;7144:6;;:10;;:13;;;;:::i;:::-;7135:6;:22;;;;6355:807;;;;;:::o;6119:232::-;6214:14;6205:2;6184:9;:18;6194:7;6184:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;6231:14;6242:2;6231:10;:14::i;:::-;6214:31;;6252:9;:13;6262:2;6252:13;;;;;;;;;;;;;;;6271:7;6252:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6252:27:2;;;;;;;;;;;;;;;;;;;;;;6311:6;6286:13;:22;6300:7;6286:22;;;;;;;;;;;:31;;;;6333:13;6344:1;6333:6;;:10;;:13;;;;:::i;:::-;6324:6;:22;;;;6119:232;;;:::o;11486:148::-;11544:4;11556:9;11602:4;11590:17;11582:25;;11628:1;11621:4;:8;11614:15;;11486:148;;;;:::o;836:110:10:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;1008:123::-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;118:522:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport './ERC721Base.sol';\nimport './ERC721Enumerable.sol';\nimport './ERC721Metadata.sol';\n\ncontract FullAssetRegistry is ERC721Base, ERC721Enumerable, ERC721Metadata {\n  constructor() public {\n  }\n\n  /**\n   * @dev Method to check if an asset identified by the given id exists under this DAR.\n   * @return uint256 the assetId\n   */\n  function exists(uint256 assetId) external view returns (bool) {\n    return _exists(assetId);\n  }\n  function _exists(uint256 assetId) internal view returns (bool) {\n    return _holderOf[assetId] != 0;\n  }\n\n  function decimals() external pure returns (uint256) {\n    return 0;\n  }\n}\n",
  "sourcePath": "erc821\\contracts\\FullAssetRegistry.sol",
  "ast": {
    "absolutePath": "erc821/contracts/FullAssetRegistry.sol",
    "exportedSymbols": {
      "FullAssetRegistry": [
        1065
      ]
    },
    "id": 1066,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1017,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "erc821/contracts/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "id": 1018,
        "nodeType": "ImportDirective",
        "scope": 1066,
        "sourceUnit": 901,
        "src": "26:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc821/contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1019,
        "nodeType": "ImportDirective",
        "scope": 1066,
        "sourceUnit": 957,
        "src": "53:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc821/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1020,
        "nodeType": "ImportDirective",
        "scope": 1066,
        "sourceUnit": 1016,
        "src": "86:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1021,
              "name": "ERC721Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 900,
              "src": "148:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Base_$900",
                "typeString": "contract ERC721Base"
              }
            },
            "id": 1022,
            "nodeType": "InheritanceSpecifier",
            "src": "148:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1023,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 956,
              "src": "160:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$956",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1024,
            "nodeType": "InheritanceSpecifier",
            "src": "160:16:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1025,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "178:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1015",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1026,
            "nodeType": "InheritanceSpecifier",
            "src": "178:14:5"
          }
        ],
        "contractDependencies": [
          37,
          47,
          900,
          956,
          1015,
          1205,
          1225,
          1250
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1065,
        "linearizedBaseContracts": [
          1065,
          1015,
          1250,
          956,
          1225,
          900,
          47,
          1205,
          37
        ],
        "name": "FullAssetRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "218:5:5",
              "statements": []
            },
            "documentation": null,
            "id": 1030,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:0:5"
            },
            "scope": 1065,
            "src": "197:26:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "422:34:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1038,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "443:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1037,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "435:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1036,
                  "id": 1040,
                  "nodeType": "Return",
                  "src": "428:23:5"
                }
              ]
            },
            "documentation": "@dev Method to check if an asset identified by the given id exists under this DAR.\n@return uint256 the assetId",
            "id": 1042,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1032,
                  "name": "assetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "376:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:17:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "416:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "415:6:5"
            },
            "scope": 1065,
            "src": "360:96:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1055,
              "nodeType": "Block",
              "src": "522:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1049,
                        "name": "_holderOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "535:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1051,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "545:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "535:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "557:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "535:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1048,
                  "id": 1054,
                  "nodeType": "Return",
                  "src": "528:30:5"
                }
              ]
            },
            "documentation": null,
            "id": 1056,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1044,
                  "name": "assetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "476:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "475:17:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1047,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "516:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:6:5"
            },
            "scope": 1065,
            "src": "459:104:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "619:19:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "632:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1060,
                  "id": 1062,
                  "nodeType": "Return",
                  "src": "625:8:5"
                }
              ]
            },
            "documentation": null,
            "id": 1064,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "610:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:9:5"
            },
            "scope": 1065,
            "src": "567:71:5",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1066,
        "src": "118:522:5"
      }
    ],
    "src": "0:641:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "erc821/contracts/FullAssetRegistry.sol",
      "exportedSymbols": {
        "FullAssetRegistry": [
          1065
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".18"
          ]
        },
        "id": 1017,
        "name": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "attributes": {
          "SourceUnit": 901,
          "absolutePath": "erc821/contracts/ERC721Base.sol",
          "file": "./ERC721Base.sol",
          "scope": 1066,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1018,
        "name": "ImportDirective",
        "src": "26:26:5"
      },
      {
        "attributes": {
          "SourceUnit": 957,
          "absolutePath": "erc821/contracts/ERC721Enumerable.sol",
          "file": "./ERC721Enumerable.sol",
          "scope": 1066,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1019,
        "name": "ImportDirective",
        "src": "53:32:5"
      },
      {
        "attributes": {
          "SourceUnit": 1016,
          "absolutePath": "erc821/contracts/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1066,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1020,
        "name": "ImportDirective",
        "src": "86:30:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            37,
            47,
            900,
            956,
            1015,
            1205,
            1225,
            1250
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1065,
            1015,
            1250,
            956,
            1225,
            900,
            47,
            1205,
            37
          ],
          "name": "FullAssetRegistry",
          "scope": 1066
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Base",
                  "referencedDeclaration": 900,
                  "type": "contract ERC721Base"
                },
                "id": 1021,
                "name": "UserDefinedTypeName",
                "src": "148:10:5"
              }
            ],
            "id": 1022,
            "name": "InheritanceSpecifier",
            "src": "148:10:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Enumerable",
                  "referencedDeclaration": 956,
                  "type": "contract ERC721Enumerable"
                },
                "id": 1023,
                "name": "UserDefinedTypeName",
                "src": "160:16:5"
              }
            ],
            "id": 1024,
            "name": "InheritanceSpecifier",
            "src": "160:16:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 1015,
                  "type": "contract ERC721Metadata"
                },
                "id": 1025,
                "name": "UserDefinedTypeName",
                "src": "178:14:5"
              }
            ],
            "id": 1026,
            "name": "InheritanceSpecifier",
            "src": "178:14:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 1065,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1027,
                "name": "ParameterList",
                "src": "208:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1028,
                "name": "ParameterList",
                "src": "218:0:5"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1029,
                "name": "Block",
                "src": "218:5:5"
              }
            ],
            "id": 1030,
            "name": "FunctionDefinition",
            "src": "197:26:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@dev Method to check if an asset identified by the given id exists under this DAR.\n@return uint256 the assetId",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "exists",
              "payable": false,
              "scope": 1065,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "assetId",
                      "scope": 1042,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1031,
                        "name": "ElementaryTypeName",
                        "src": "376:7:5"
                      }
                    ],
                    "id": 1032,
                    "name": "VariableDeclaration",
                    "src": "376:15:5"
                  }
                ],
                "id": 1033,
                "name": "ParameterList",
                "src": "375:17:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1042,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1034,
                        "name": "ElementaryTypeName",
                        "src": "416:4:5"
                      }
                    ],
                    "id": 1035,
                    "name": "VariableDeclaration",
                    "src": "416:4:5"
                  }
                ],
                "id": 1036,
                "name": "ParameterList",
                "src": "415:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1036
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1056,
                              "type": "function (uint256) view returns (bool)",
                              "value": "_exists"
                            },
                            "id": 1037,
                            "name": "Identifier",
                            "src": "435:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1032,
                              "type": "uint256",
                              "value": "assetId"
                            },
                            "id": 1038,
                            "name": "Identifier",
                            "src": "443:7:5"
                          }
                        ],
                        "id": 1039,
                        "name": "FunctionCall",
                        "src": "435:16:5"
                      }
                    ],
                    "id": 1040,
                    "name": "Return",
                    "src": "428:23:5"
                  }
                ],
                "id": 1041,
                "name": "Block",
                "src": "422:34:5"
              }
            ],
            "id": 1042,
            "name": "FunctionDefinition",
            "src": "360:96:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "_exists",
              "payable": false,
              "scope": 1065,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "assetId",
                      "scope": 1056,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1043,
                        "name": "ElementaryTypeName",
                        "src": "476:7:5"
                      }
                    ],
                    "id": 1044,
                    "name": "VariableDeclaration",
                    "src": "476:15:5"
                  }
                ],
                "id": 1045,
                "name": "ParameterList",
                "src": "475:17:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1056,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1046,
                        "name": "ElementaryTypeName",
                        "src": "516:4:5"
                      }
                    ],
                    "id": 1047,
                    "name": "VariableDeclaration",
                    "src": "516:4:5"
                  }
                ],
                "id": 1048,
                "name": "ParameterList",
                "src": "515:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1048
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 18,
                                  "type": "mapping(uint256 => address)",
                                  "value": "_holderOf"
                                },
                                "id": 1049,
                                "name": "Identifier",
                                "src": "535:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1044,
                                  "type": "uint256",
                                  "value": "assetId"
                                },
                                "id": 1050,
                                "name": "Identifier",
                                "src": "545:7:5"
                              }
                            ],
                            "id": 1051,
                            "name": "IndexAccess",
                            "src": "535:18:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1052,
                            "name": "Literal",
                            "src": "557:1:5"
                          }
                        ],
                        "id": 1053,
                        "name": "BinaryOperation",
                        "src": "535:23:5"
                      }
                    ],
                    "id": 1054,
                    "name": "Return",
                    "src": "528:30:5"
                  }
                ],
                "id": 1055,
                "name": "Block",
                "src": "522:41:5"
              }
            ],
            "id": 1056,
            "name": "FunctionDefinition",
            "src": "459:104:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "decimals",
              "payable": false,
              "scope": 1065,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1057,
                "name": "ParameterList",
                "src": "584:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1064,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1058,
                        "name": "ElementaryTypeName",
                        "src": "610:7:5"
                      }
                    ],
                    "id": 1059,
                    "name": "VariableDeclaration",
                    "src": "610:7:5"
                  }
                ],
                "id": 1060,
                "name": "ParameterList",
                "src": "609:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1060
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 1061,
                        "name": "Literal",
                        "src": "632:1:5"
                      }
                    ],
                    "id": 1062,
                    "name": "Return",
                    "src": "625:8:5"
                  }
                ],
                "id": 1063,
                "name": "Block",
                "src": "619:19:5"
              }
            ],
            "id": 1064,
            "name": "FunctionDefinition",
            "src": "567:71:5"
          }
        ],
        "id": 1065,
        "name": "ContractDefinition",
        "src": "118:522:5"
      }
    ],
    "id": 1066,
    "name": "SourceUnit",
    "src": "0:641:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-03T17:24:10.754Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Authorize a third party operator to manage one particular asset",
        "params": {
          "assetId": "asset to approve",
          "operator": "address to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "exists(uint256)": {
        "details": "Method to check if an asset identified by the given id exists under this DAR.",
        "return": "uint256 the assetId"
      },
      "getApproved(uint256)": {
        "details": "Query what address has been particularly authorized to move an asset",
        "params": {
          "assetId": "the asset to be queried for"
        },
        "return": "bool true if the asset has been approved by the holder"
      },
      "isApprovedForAll(address,address)": {
        "details": "Query whether an address has been authorized to move any assets on behalf of someone else",
        "params": {
          "assetHolder": "the address that provided the authorization",
          "operator": "the address that might be authorized"
        },
        "return": "bool true if the operator has been authorized to move any assets"
      },
      "isAuthorized(address,uint256)": {
        "details": "Query if an operator can move an asset.",
        "params": {
          "assetId": "the asset that has been `approved` for transfer",
          "operator": "the address that might be authorized"
        },
        "return": "bool true if the asset has been approved by the holder"
      },
      "ownerOf(uint256)": {
        "details": "Queries what address owns an asset. This method does not throw. In order to check if the asset exists, use the `exists` function or check if the return value of this call is `0`.",
        "return": "uint256 the assetId"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Alias of `safeTransferFrom(from, to, assetId, '')`",
        "params": {
          "assetId": "uint256 ID of the asset to be transferred",
          "from": "address that currently owns an asset",
          "to": "address to receive the ownership of the asset"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Securely transfers the ownership of a given asset from one address to another address, calling the method `onNFTReceived` on the target address if there's code associated with it",
        "params": {
          "assetId": "uint256 ID of the asset to be transferred",
          "from": "address that currently owns an asset",
          "to": "address to receive the ownership of the asset",
          "userData": "bytes arbitrary user information to attach to this transfer"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Authorize a third party operator to manage (send) msg.sender's asset",
        "params": {
          "authorized": "bool set to true to authorize, false to withdraw authorization",
          "operator": "address to be approved"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns `true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise",
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Throws if `index` >= `balanceOf(owner)` or if `owner` is the zero address, representing invalid assets. Otherwise this must not throw.",
        "params": {
          "index": "A counter less than `balanceOf(owner)`",
          "owner": "An address where we are interested in assets owned by them"
        },
        "return": "The identifier for the `index`th asset assigned to `owner`,  (sort order not specified)"
      },
      "tokensOf(address)": {
        "details": "This is not intended to be used on-chain",
        "params": {
          "owner": "address of the owner to query"
        },
        "return": "a list of all assetIds of a user"
      },
      "totalSupply()": {
        "details": "Gets the total amount of assets stored by the contract",
        "return": "uint256 representing the total amount of assets"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given asset from one address to another address Warning! This function does not attempt to verify that the target address can send tokens.",
        "params": {
          "assetId": "uint256 ID of the asset to be transferred",
          "from": "address sending the asset",
          "to": "address to receive the ownership of the asset"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "tokenOfOwnerByIndex(address,uint256)": {
        "notice": "Enumerate tokens assigned to an owner"
      },
      "tokensOf(address)": {
        "notice": "Get all tokens of a given address"
      }
    }
  }
}